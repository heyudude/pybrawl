# coding: utf-8

"""
    Brawl_Stars_API

    Unofficial Swagger definition for the official Brawl Stars API  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://github.com/heyudude/brawlstars-swagger
"""


from __future__ import absolute_import

import unittest
import datetime

import pybrawl
from pybrawl.models.player_battle_log import PlayerBattleLog  # noqa: E501
from pybrawl.rest import ApiException

class TestPlayerBattleLog(unittest.TestCase):
    """PlayerBattleLog unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PlayerBattleLog
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pybrawl.models.player_battle_log.PlayerBattleLog()  # noqa: E501
        if include_optional :
            return PlayerBattleLog(
                items = [
                    pybrawl.models.battle_list.BattleList(
                        battle_time = '0', 
                        event = [
                            pybrawl.models.event.Event(
                                id = 56, 
                                mode = '0', 
                                map = '0', )
                            ], 
                        battle = [
                            pybrawl.models.battle.Battle(
                                mode = '0', 
                                type = '0', 
                                rank = 56, 
                                trophy_change = 56, 
                                players = [
                                    pybrawl.models.battle_log_team.BattleLogTeam(
                                        tag = '0', 
                                        name = '0', 
                                        brawler = [
                                            pybrawl.models.battle_log_brawler.BattleLogBrawler(
                                                id = 56, 
                                                name = '0', 
                                                power = 56, 
                                                trophies = 56, 
                                                paging = pybrawl.models.search_paging.SearchPaging(
                                                    cursors = pybrawl.models.search_paging_cursors.SearchPaging_cursors(
                                                        after = '0', 
                                                        before = '0', ), ), )
                                            ], )
                                    ], )
                            ], )
                    ], 
                paging = pybrawl.models.search_paging.SearchPaging(
                    cursors = pybrawl.models.search_paging_cursors.SearchPaging_cursors(
                        after = '0', 
                        before = '0', ), )
            )
        else :
            return PlayerBattleLog(
        )

    def testPlayerBattleLog(self):
        """Test PlayerBattleLog"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
